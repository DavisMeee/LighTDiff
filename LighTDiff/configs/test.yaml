name: test
model_type: LighTDiff
num_gpu: 1
manual_seed: 42

# Dataset
datasets:
  train:
    name: train
    type: LOL_Dataset
    gt_root: ~ # put your hr data path
    input_root: ~ # put your lr data path
    input_mode: ~
    use_flip: true
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: validation
    type: LOL_Dataset
    gt_root: ~ # put your hr data path
    input_root: ~ # put your lr data path
    input_mode: pad
    divide: 32

# base frame
network_unet:
  type: TLBNet
  in_channel: 6
  out_channel: 3
  inner_channel: 64
  norm_groups: 32

  channel_mults: [1,2,4]
  attn_res: [16]
  res_blocks: 2
  dropout: 0.2
  divide: 16
  use_tlu: True

network_global_corrector:
  type:  SpatialControlModule
  normal01: true

network_ddpm:
  type: GaussianDiffusion
  image_size: 256
  channels: 3
  conditional: true
  color_limit: -1
  structure: [1, 2, 2, 2]

ddpm_schedule:
  schedule: "linear"
  n_timestep: 2000
  linear_start: !!float 1e-6
  linear_end: !!float 1e-2

# path
path:
  pretrain_network_g: ~  # ckpt path
  param_key_g: params
  strict_load_g: False
  pretrain_network_d: ~
  resume_state: ~
  ignore_resume_networks: ['network_identity']

train:
  cs_on_shift: true
  vis_train: true
  vis_num: 150
  train_type: lighT_structure
  t_border: 1000
  input_mode: crop
  crop_size: [256,256]
  optim_g:
    type: Adam
    lr: !!float 1e-4

  scheduler:
    type: MultiStepLR
    milestones: [20000,45000,90000]
    gamma: 0.3

  total_iter: 100000
  warmup_iter: -1  # no warm up

# validation settings
val:
  cal_score: true
  split_log: true
  fix_seed: true
  color_gamma: 1.0
  use_up_v2: true
  only_save_sr: true
  structure: [1, 2, 2, 2]
  ddim_eta: !!float 1.0
  ddim_timesteps: 4
  use_kind_align: true
  cal_all: true
  show_all: true
  val_freq: !!float 5000
  save_img: true

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim_lol
    lpips:
      type: calculate_lpips_lol


# Basicsr logger settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: true
